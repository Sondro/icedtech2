// This file been auto generated by the superbuild pipeline and the QuakeToC tool.
// Please do NOT modify this file. Instead please open the .qc files, and make changes there.
// This auto generated file is released under the GPL license, please see code_license.txt
// 

#define GENERATED_SUPERSCRIPT 1
#include "../../splines/math_vector.h"
#include "../../game/g_local.h "
#include "../superscript.h"
	#include "generated_map_zoo.h"

#include "save_func.h"
static float message_count = 0;
static gentity_t * spawned_army_entity = 0;

void map_zoo_initial_spawn(gentity_t *self) {

	SetEntityHealth(self, 75); 
	SetPlayerArmor(self, 50); 
}
void map_zoo_worldspawn(gentity_t *self) {

	
	monster_zombie_precache(null);
	monster_army_precache(null);
}
void map_zoo_text_example(gentity_t *self) {

	if(message_count == 0)
	{
		CenterPrint(self->activator, "Welcome to the zoo!");
	}
	message_count = 1;
}
void map_zoo_spawn_army_test(gentity_t *self) {

	if(self->target_ent == null)
	{
		self->target_ent = FindEntity(self->target);

		if(self->target_ent == null)
		{
			Print("No target set, can't spawn anything!");
			return;
		}
	}

	if(spawned_army_entity == null)
	{
		spawned_army_entity = SpawnEntityByClass("monster_army", self->target_ent->r.currentOrigin, 180);
	}
	else
	{
		
		if(spawned_army_entity->health <= 0)
		{
			FreeEntity(spawned_army_entity);
			spawned_army_entity = SpawnEntityByClass("monster_army", self->target_ent->r.currentOrigin, 180);
		}
	} 
}
